name: meson

on: [push, pull_request]

concurrency:
  group: ${{github.workflow}}-${{github.head_ref}}
  cancel-in-progress: true

jobs:
  Ubuntu:
    runs-on: ubuntu-20.04
    name: Linux-GCC${{matrix.cxx}}-${{matrix.deps}}-${{matrix.type}}
    strategy:
      matrix:
        cxx: ['7', '9', '10']
        deps: ['forcefallback', 'default']
        type: ['shared', 'static']
    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        run: |
          sudo apt update
          sudo apt install -y g++-${{matrix.cxx}} libcurl4-gnutls-dev libmicrohttpd-dev
          python3 -m pip install meson ninja

      - name: Compile and Test
        env:
          CXX: g++-${{matrix.cxx}}
          CXXFLAGS: '-Wno-abi-tag -Wno-padded -Wno-unused-macros -Wno-effc++ -Wno-conversion -Wno-switch-enum -Wno-switch-default -Wno-cast-align'
        run: |
          meson setup "${{github.workspace}}/build" --wrap-mode=${{matrix.deps}} -Ddefault_library=${{matrix.type}} -Dwarning_level=everything
          meson compile -C "${{github.workspace}}/build" --verbose
          meson test -C "${{github.workspace}}/build" --verbose

  MacOS:
    runs-on: macos-latest
    name: macOS-${{matrix.deps}}-${{matrix.type}}
    strategy:
      matrix:
        deps: ['forcefallback', 'default']
        type: ['shared', 'static']
    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        run: |
          python3 -m pip install meson ninja
          brew install libmicrohttpd

      - name: Compile and Test
        run: |
          meson setup "${{github.workspace}}/build" --wrap-mode=${{matrix.deps}} -Ddefault_library=${{matrix.type}} -Dwarning_level=everything -Dcpp_std=c++20
          meson compile -C "${{github.workspace}}/build" --verbose
          meson test -C "${{github.workspace}}/build" --verbose
